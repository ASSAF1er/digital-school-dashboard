[{"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/index.js":"1","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/App.jsx":"2","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Layout.jsx":"3","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/NouvelEleve.jsx":"4","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Dashboard.jsx":"5","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/GestionEleves.jsx":"6","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/LogIn.jsx":"7","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Formations.jsx":"8","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Comptabilite.jsx":"9","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/SuperAdmin.jsx":"10","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Monprofil.jsx":"11","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/studentList.js":"12","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/trainings.js":"13","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/comptes.js":"14","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/SideBar.jsx":"15","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Footer.jsx":"16","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/UpperBar.jsx":"17","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosPerso.jsx":"18","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosContact.jsx":"19","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosFormation.jsx":"20","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DashboardStats.jsx":"21","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DashboardCharts.jsx":"22","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/LatestStudents.jsx":"23","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/ListElement.jsx":"24","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Boxformation.jsx":"25","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/transactions.jsx":"26","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/SideBarLinks.jsx":"27","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Connexion.jsx":"28","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/AuthContext.jsx":"29","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/Loader.jsx":"30","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/ModifInfosPerso.jsx":"31","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutTransaction.jsx":"32","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifTransaction.jsx":"33","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutCompte.jsx":"34","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutFormation.jsx":"35","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifEleve.jsx":"36","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifCompte.jsx":"37","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifFormation.jsx":"38","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/MailCompte.jsx":"39","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/LinearStepper.jsx":"40","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/AddSucess.jsx":"41","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DeleteTraining.jsx":"42","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteCompte.jsx":"43","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteTransaction.jsx":"44","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Infos.jsx":"45"},{"size":258,"mtime":1695141243686,"results":"46","hashOfConfig":"47"},{"size":1664,"mtime":1696971804445,"results":"48","hashOfConfig":"47"},{"size":863,"mtime":1695984805930,"results":"49","hashOfConfig":"47"},{"size":1941,"mtime":1696908890077,"results":"50","hashOfConfig":"47"},{"size":401,"mtime":1694911767407,"results":"51","hashOfConfig":"47"},{"size":4475,"mtime":1696555506525,"results":"52","hashOfConfig":"47"},{"size":85,"mtime":1694687185622,"results":"53","hashOfConfig":"47"},{"size":5179,"mtime":1696912038867,"results":"54","hashOfConfig":"47"},{"size":5123,"mtime":1696918364640,"results":"55","hashOfConfig":"47"},{"size":4139,"mtime":1696918348500,"results":"56","hashOfConfig":"47"},{"size":3396,"mtime":1696372160288,"results":"57","hashOfConfig":"47"},{"size":12419,"mtime":1697789846704,"results":"58","hashOfConfig":"47"},{"size":1222,"mtime":1696703930818,"results":"59","hashOfConfig":"47"},{"size":1159,"mtime":1696704371135,"results":"60","hashOfConfig":"47"},{"size":1857,"mtime":1696357984511,"results":"61","hashOfConfig":"47"},{"size":534,"mtime":1695946646456,"results":"62","hashOfConfig":"47"},{"size":7419,"mtime":1695817288761,"results":"63","hashOfConfig":"47"},{"size":4267,"mtime":1696846603810,"results":"64","hashOfConfig":"47"},{"size":3488,"mtime":1696553792086,"results":"65","hashOfConfig":"47"},{"size":6892,"mtime":1696845740974,"results":"66","hashOfConfig":"47"},{"size":2595,"mtime":1694907112112,"results":"67","hashOfConfig":"47"},{"size":1853,"mtime":1694914233341,"results":"68","hashOfConfig":"47"},{"size":2320,"mtime":1696555328109,"results":"69","hashOfConfig":"47"},{"size":1730,"mtime":1696555756200,"results":"70","hashOfConfig":"47"},{"size":741,"mtime":1696373255230,"results":"71","hashOfConfig":"47"},{"size":1477,"mtime":1696375864701,"results":"72","hashOfConfig":"47"},{"size":881,"mtime":1696971615107,"results":"73","hashOfConfig":"47"},{"size":2821,"mtime":1695994133666,"results":"74","hashOfConfig":"47"},{"size":352,"mtime":1695994021692,"results":"75","hashOfConfig":"47"},{"size":164,"mtime":1696341798108,"results":"76","hashOfConfig":"47"},{"size":4210,"mtime":1696416155840,"results":"77","hashOfConfig":"47"},{"size":5284,"mtime":1696909111196,"results":"78","hashOfConfig":"47"},{"size":5066,"mtime":1696909123342,"results":"79","hashOfConfig":"47"},{"size":5879,"mtime":1696909008453,"results":"80","hashOfConfig":"47"},{"size":6039,"mtime":1696912252390,"results":"81","hashOfConfig":"47"},{"size":5665,"mtime":1696714991181,"results":"82","hashOfConfig":"47"},{"size":5813,"mtime":1696909084334,"results":"83","hashOfConfig":"47"},{"size":6037,"mtime":1696841662624,"results":"84","hashOfConfig":"47"},{"size":4078,"mtime":1699436918592,"results":"85","hashOfConfig":"47"},{"size":912,"mtime":1696846708480,"results":"86","hashOfConfig":"47"},{"size":467,"mtime":1696909937117,"results":"87","hashOfConfig":"47"},{"size":2805,"mtime":1696916726354,"results":"88","hashOfConfig":"47"},{"size":2877,"mtime":1696918644024,"results":"89","hashOfConfig":"47"},{"size":2957,"mtime":1696917534061,"results":"90","hashOfConfig":"47"},{"size":5861,"mtime":1696976618527,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"j3iicj",{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"95"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"95"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"95"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"95"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"95"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/index.js",[],[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/App.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Layout.jsx",["237"],[],"import { Outlet } from 'react-router-dom'\nimport SideBar from './SideBar'\nimport UpperBar from './UpperBar'\nimport Footer from './Footer'\nimport { useContext } from 'react'\nimport { ConnectedUser } from '../utils/AuthContext'\nimport { useNavigate } from 'react-router-dom'\nimport { useEffect } from 'react'\nfunction Layout() {\n    const { connected } = useContext(ConnectedUser)\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (!connected) {\n            navigate('/Connexion')\n        }\n    }, [connected])\n\n    return (\n        <div className=\"flex flex-row bg-slate h-screen w-screen overflow-hidden\">\n            <SideBar />\n            <div className=\"flex-1\">\n                <UpperBar />\n                <div className=\"p-4\">{<Outlet />}</div>\n                <Footer />\n            </div>\n        </div>\n    )\n}\n\nexport default Layout\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/NouvelEleve.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Dashboard.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/GestionEleves.jsx",["238"],[],"//import { studentList } from '../data/studentList'\nimport Loader from '../utils/Loader'\n\nimport ListElement from '../components/ListElement'\nimport default_photo from '../assets/profile.png'\nimport { Link } from 'react-router-dom'\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nfunction GestionEleves() {\n    const thStyle = 'pl-3 whitespace-nowrap py-4'\n    const [students, setStudents] = useState()\n    const handleDelete = (id) => {\n        axios\n            .delete(`http://localhost:8000/api/students/${id}`)\n            .then(() => setStudents(students.filter((stud) => stud._id !== `${id}`)))\n            .catch((err) => console.log({ err }))\n    }\n\n    useEffect(() => {\n        axios\n            .get('http://localhost:8000/api/students/')\n            .then((res) => setStudents(res.data.reverse()))\n\n            .catch((error) => {\n                console.log(error)\n            })\n\n        console.log(students)\n    }, [])\n\n    return (\n        <div className=\"flex flex-col items-center justify-center w-full h-full \">\n            <div className=\" mt-1 pt-2 shadow-md flex h-[300px] max-h-[500px] w-[1000px] overflow-scroll\">\n                <table>\n                    <thead>\n                        <tr className=\"bg-blue text-white  px-2 text-left rounded-md\">\n                            <th className={thStyle}> </th>\n                            <th className={thStyle}>Noms</th>\n                            <th className={thStyle}>Prénoms</th>\n                            <th className={thStyle}>sexe</th>\n                            <th className={thStyle}>Date début</th>\n                            <th className={thStyle}>Date fin</th>\n                            <th className={thStyle}>Reste</th>\n                            <th className={thStyle}>Formation</th>\n                            <th className={thStyle}>Montant</th>\n                            <th className={thStyle}>Avance</th>\n                            <th className={thStyle}>Niveau</th>\n                            <th className={thStyle}>Date Naiss.</th>\n                            <th className={thStyle}>Contact</th>\n                            <th className={thStyle}>Quartier</th>\n                            <th className={thStyle}>Email</th>\n                            <th className={thStyle}>Photo</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {!students ? (\n                            <div className=\"absolute w-[1000px] h-[200px] flex items-center justify-center\">\n                                <Loader />\n                            </div>\n                        ) : (\n                            students.map((stud) => (\n                                <ListElement\n                                    key={stud._id}\n                                    handleDelete={handleDelete}\n                                    id={stud._id}\n                                    name={stud.firstName}\n                                    surname={stud.lastName}\n                                    sexe={stud.sex}\n                                    start={stud.dateBegin}\n                                    end={stud.dateEnd}\n                                    rest={stud.rest}\n                                    training={stud.training}\n                                    birthday={stud.dateOfBirth}\n                                    level={stud.schoolLevel}\n                                    tel1={stud.tel1}\n                                    amount={stud.amount}\n                                    advance={stud.advance}\n                                    quater={stud.quater}\n                                    email={stud.email}\n                                    photo={stud.photo ? stud.photo : default_photo}\n                                />\n                            ))\n                        )}\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"flex \">\n                <Link to=\"/nouvel-eleve\" className=\"add-student-btn\">\n                    <div>\n                        <span className=\"material-icons hover:transfom hover:scale-[1.1] text-blue text-[43px] mt-3 shadow-xl rounded-full !p-0\">\n                            add_circle\n                        </span>\n                    </div>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default GestionEleves\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/LogIn.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Formations.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Comptabilite.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/SuperAdmin.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Monprofil.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/studentList.js",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/trainings.js",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/comptes.js",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/SideBar.jsx",["239"],[],"import { Link, useNavigate } from 'react-router-dom'\nimport logo from '../assets/digital-school-logo-transparent.png'\nimport { SIDE_BAR_TOP_LINKS, SIDE_BAR_BOTTOM_LINKS } from '../utils/SideBarLinks'\nimport classNames from 'classnames'\nimport { useLocation } from 'react-router-dom'\n\nconst LinkClasses =\n    'text-grey text-[18px] flex flex-row items-center gap-2 pl-5 py-3 hover:bg-light-blue  rounded-sm font-normal '\n\nconst ActiveLink = 'text-white bg-blue hover:!bg-blue '\n\nfunction SideBar() {\n    return (\n        <div className=\"bg-white  w-60 py-3 px-1 flex flex-col shadow-xl\">\n            <div className=\"flex items-center  mx-auto pb-4\">\n                <img src={logo} alt=\"logo\" className=\"object-contain  w-40\" />\n            </div>\n            <div className=\" flex flex-1 pb-0.5 flex-col gap-0.5\">\n                {SIDE_BAR_TOP_LINKS.map((item) => (\n                    <SideBarLink key={item.label} item={item} />\n                ))}\n            </div>\n            <div className=\" border-t pt-0.5  \">\n                {SIDE_BAR_BOTTOM_LINKS.map((item) => (\n                    <SideBarLink key={item.label} item={item} />\n                ))}\n                <div>\n                    <Link to=\"/Connexion\" className={classNames('text-red', LinkClasses)}>\n                        <span className=\"material-icons\">power_settings_new</span>\n                        Déconnexion\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SideBar\n\nfunction SideBarLink({ item }) {\n    const location = useLocation()\n    return (\n        <Link to={item.path} className={classNames(LinkClasses, location.pathname === item.path ? ActiveLink : '')}>\n            <span class className=\"material-icons\">\n                {item.icon}\n            </span>\n            {item.label}\n        </Link>\n    )\n}\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Footer.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/UpperBar.jsx",["240"],[],"import default_profile from '../assets/profile.png'\nimport { Popover, Transition } from '@headlessui/react'\nimport { Fragment } from 'react'\nimport classNames from 'classnames'\nimport React, { useState } from 'react'\n\nconst inputClass = 'w-70 py-1 px-2 text-grey focus:outline-none h-10'\n\nfunction UpperBar() {\n    const [month, setMonth] = useState(new Date().getMonth())\n    const [weekDay, setWeekDay] = useState(new Date().getDay())\n    const [day, setDay] = useState(new Date().getDate())\n    const [hour, setHour] = useState(new Date().getHours())\n    const [min, setMin] = useState(new Date().getMinutes())\n    const [sec, setSec] = useState(new Date().getSeconds())\n\n    const weekdays = ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam']\n    const months = ['jan', 'fev', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'sept', 'oct', 'nov', 'dec']\n\n    const refresh = () => {\n        setInterval(() => {\n            let d = new Date()\n            setMonth(d.getMonth() + 1)\n            setDay(d.getDate())\n            setWeekDay(d.getDay())\n            setHour(d.getHours())\n            setMin(d.getMinutes())\n            setSec(d.getSeconds())\n        }, 1000)\n    }\n    refresh()\n    return (\n        <div className=\" h-16 px-4 flex justify-between items-center  \">\n            <Popover className=\"\">\n                {({ open }) => (\n                    <>\n                        <div\n                            className={classNames(\n                                open && '!visible',\n                                ' invisible absolute top-0 left-0 bg-bdcolor backdrop-opacity-90 backdrop-blur-sm w-full h-full z-9 overflow-hidden'\n                            )}\n                        ></div>\n\n                        <Popover.Button\n                            className={classNames(\n                                open && 'bg-light-blue',\n                                'hover:bg-light-blue p-1 rounded-full focus:outline-none active:outline-none'\n                            )}\n                        >\n                            <div className=\"px-4 bg-white rounded-full flex items-center shadow-sm  \">\n                                <input type=\"text\" placeholder=\"chercher un élève...\" className={inputClass} />\n                                <span className=\"material-icons\">search</span>\n                            </div>\n                        </Popover.Button>\n                        <Transition\n                            as={Fragment}\n                            enter=\"transition ease-out duration-200\"\n                            enterFrom=\"opacity-0 translate-y-1\"\n                            enterTo=\"opacity-100 translate-y-0\"\n                            leave=\"transition ease-in duration-150\"\n                            leaveFrom=\"opacity-100 translate-y-0\"\n                            leaveTo=\"opacity-0 translate-y-1\"\n                        >\n                            <Popover.Panel className=\"absolute  left-1/2 z-10 mt-3 w-screen max-w-sm -translate-x-1/2 transform px-4 sm:px-0 lg:max-w-3xl\">\n                                <div className=\"bg-white  shadow-md rounded-md  py-1 h-60 max-h-2/3 \">\n                                    <div className=\"px-4 bg-white  border-light-blue border-b-2 flex items-center shadow-sm  \">\n                                        <span className=\"material-icons cursor-pointer\">search</span>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"chercher un élève...\"\n                                            className=\"focus:outline-none h-10 text-inputcolor py-2 mx-2 w-4/5\"\n                                        />\n                                    </div>\n                                    <div className=\"px-5 py-3\">Aucun résultat de recherche</div>\n                                </div>\n                            </Popover.Panel>\n                        </Transition>\n                    </>\n                )}\n            </Popover>\n\n            <div className=\"flex gap-10\">\n                <div className=\"flex items-center gap-1\">\n                    <div className=\"text-blue \">\n                        <span className=\"material-icons\">calendar_month</span>\n                    </div>\n                    <div className=\"flex gap-2\">\n                        <div>{`${weekdays[weekDay]}, ${day} ${months[month - 1]}`}.</div>\n                        <div className=\"flex flex-1\">\n                            {hour.toString().length === 1 ? '0' : ''}\n                            {hour}:{min.toString().length === 1 ? '0' : ''}\n                            {min}:{sec.toString().length === 1 ? '0' : ''}\n                            {sec}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Popover className=\"relative\">\n                        {({ open }) => (\n                            <>\n                                <Popover.Button\n                                    className={classNames(\n                                        open && 'bg-light-blue',\n                                        'hover:bg-light-blue p-1 z-1 rounded-full focus:outline-none active:outline-none'\n                                    )}\n                                >\n                                    <img\n                                        src=\"https://source.unsplash.com/40x40?african-man-face\"\n                                        alt=\"profile\"\n                                        className=\"w-10 object-cover rounded-full bg-light-blue\"\n                                    />\n                                </Popover.Button>\n                                <Transition\n                                    as={Fragment}\n                                    enter=\"transition ease-out duration-200\"\n                                    enterFrom=\"opacity-0 translate-y-1\"\n                                    enterTo=\"opacity-100 translate-y-0\"\n                                    leave=\"transition ease-in duration-150\"\n                                    leaveFrom=\"opacity-100 translate-y-0\"\n                                    leaveTo=\"opacity-0 translate-y-1\"\n                                >\n                                    <Popover.Panel className=\"absolute  right-2 z-10 mt-2.5  \">\n                                        <div className=\"bg-white w-60 rounded-lg shadow-lg p-3 \">\n                                            <strong>Profil</strong>\n                                            <br />\n                                            <span>Id:</span>\n                                            <br />\n                                            <span>Nom:</span>\n                                            <br />\n                                            <span>Statut:</span>\n                                            <br />\n                                            <span>Email: assaffart@gmail.com</span>\n                                            <br />\n                                        </div>\n                                    </Popover.Panel>\n                                </Transition>\n                            </>\n                        )}\n                    </Popover>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UpperBar\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosPerso.jsx",["241"],[],"import { Link } from 'react-router-dom'\nimport classNames from 'classnames'\nimport { useState, useEffect } from 'react'\n\nfunction InfosPerso({ activePage, setActivePage, inputStyle, labelStyle, newStudent, setNewStudent }) {\n    const [firstName, setFirstName] = useState(newStudent.firstName)\n    const [lastName, setLastName] = useState(newStudent.lastName)\n    const [sex, setSex] = useState(newStudent.sex)\n    const [dateOfBirth, setDateOfBirth] = useState(newStudent.dateOfBirth)\n\n    useEffect(() => {\n        setNewStudent({\n            ...newStudent,\n            firstName,\n            lastName,\n            sex,\n            dateOfBirth\n        })\n    }, [firstName, lastName, sex, dateOfBirth])\n\n    const handleClick = () => {\n        console.log(newStudent)\n        setActivePage(activePage + 1)\n    }\n\n    return (\n        <div>\n            <div className=\"w-full  text-center\">\n                <strong className=\"text-center text-blue text-2xl \">Informations personnelles</strong>\n            </div>\n            <div className=\"px-44 mt-3 flex flex-col gap-4\">\n                <div className=\"flex flex-row gap-4\">\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Nom <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={firstName}\n                            onChange={(e) => setFirstName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Prénom <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={lastName}\n                            onChange={(e) => setLastName(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Sexe <span className=\"text-blue\">*</span>\n                    </label>\n                    <select type=\"text\" className={inputStyle} value={sex} onChange={(e) => setSex(e.target.value)}>\n                        <option value=\"\" defaultValue disabled></option>\n                        <option value=\"F\">Féminin</option>\n                        <option value=\"M\">Masculin</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Date de naissance<span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"date\"\n                        className={inputStyle}\n                        value={dateOfBirth}\n                        onChange={(e) => setDateOfBirth(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col flex-1 h-30\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Photo\n                    </label>\n                    <div className=\"bg-light-blue h-36 py-2 rounded-md\">\n                        <input type=\"file\" className={classNames(inputStyle, 'h-9')} />\n                    </div>\n                </div>\n\n                <div className=\"flex flex-row justify-between \">\n                    <div></div>\n                    <Link>\n                        <button\n                            onClick={handleClick}\n                            className=\"flex bg-blue rounded-md  text-white px-7 py-1  justify-center items-center text-xl\"\n                        >\n                            Suivant <span className=\"material-icons\">chevron_right</span>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfosPerso\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosContact.jsx",["242"],[],"import React, { useState, useEffect } from 'react'\n\nfunction InfosContact({ activePage, setActivePage, inputStyle, labelStyle, newStudent, setNewStudent }) {\n    const handleClickNext = () => setActivePage(activePage + 1)\n    const handleClickPrev = () => setActivePage(activePage - 1)\n\n    const [tel1, setTel1] = useState(newStudent.tel1)\n    const [tel2, setTel2] = useState(newStudent.tel2)\n    const [email, setEmail] = useState(newStudent.email)\n    const [quater, setQuater] = useState(newStudent.quater)\n\n    useEffect(() => {\n        setNewStudent({ ...newStudent, tel1, tel2, email, quater })\n    }, [tel1, tel2, email, quater])\n\n    return (\n        <div>\n            <div className=\"w-full  text-center\">\n                <strong className=\"text-center text-blue text-2xl \">Informations de contact</strong>\n            </div>\n            <div className=\"px-44 mt-5 flex flex-col gap-4\">\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Numéro de téléphone 1 <span className=\"text-blue\">*</span>\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={tel1} onChange={(e) => setTel1(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Numéro de téléphone 2\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={tel2} onChange={(e) => setTel2(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        E-mail <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"e-mail\"\n                        className={inputStyle}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Quartier <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={quater}\n                        onChange={(e) => setQuater(e.target.value)}\n                    />\n                </div>\n\n                <div className=\"flex flex-row justify-between \">\n                    <div>\n                        <button\n                            onClick={handleClickPrev}\n                            className=\"flex  rounded-md border-blue border text-blue px-7 py-1  justify-center items-center text-xl\"\n                        >\n                            <span className=\"material-icons\">chevron_left</span> Précédent\n                        </button>\n                    </div>\n\n                    <button\n                        onClick={handleClickNext}\n                        className=\"flex bg-blue rounded-md  text-white px-7 py-1  justify-center items-center text-xl\"\n                    >\n                        Suivant <span className=\"material-icons\">chevron_right</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfosContact\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosFormation.jsx",["243"],[],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction InfosFormation({ activePage, setActivePage, inputStyle, labelStyle, newStudent, setNewStudent }) {\n    const handleClickPrev = () => setActivePage(activePage - 1)\n\n    const [schoolLevel, setSchoolLevel] = useState(newStudent.schoolLevel)\n    const [training, setTraining] = useState(newStudent.training)\n    const [dateBegin, setDateBegin] = useState(newStudent.dateBegin)\n    const [dateEnd, setDateEnd] = useState(newStudent.dateEnd)\n    const [amount, setAmount] = useState(newStudent.amount)\n    const [advance, setAdvance] = useState(newStudent.advance)\n    const [rest, setRest] = useState(newStudent.rest)\n\n    useEffect(() => {\n        setNewStudent({ ...newStudent, schoolLevel, training, dateBegin, dateEnd, amount, advance, rest })\n    }, [schoolLevel, training, dateBegin, dateEnd, amount, advance, rest])\n\n    useEffect(() => {\n        setRest(amount - advance)\n    }, [amount, advance])\n\n    function addNewStudent() {\n        setActivePage(activePage + 1)\n        axios\n            .post('http://localhost:8000/api/students', newStudent)\n            .then(() => console.log('Nouvel Eleve ajouté avec succès'))\n            .catch((error) => console.log(error))\n    }\n    return (\n        <div>\n            <div className=\"w-full  text-center\">\n                <strong className=\"text-center text-blue text-2xl \">Informations de la Formation</strong>\n            </div>\n            <div className=\"px-44 mt-5 flex flex-col gap-4\">\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Niveau scolaire<span className=\"text-blue\">*</span>\n                    </label>\n\n                    <select className={inputStyle} value={schoolLevel} onChange={(e) => setSchoolLevel(e.target.value)}>\n                        <option value=\"\"></option>\n                        <option value=\"Master\">CEP</option>\n                        <option value=\"BEPC\">BEPC</option>\n                        <option value=\"Probatoire\">Probatoire</option>\n                        <option value=\"Bac\">Bac</option>\n                        <option value=\"Licence 1\">Licence 1</option>\n                        <option value=\"Licence 2\">Licence 2</option>\n                        <option value=\"Licence 3\">Licence 3</option>\n                        <option value=\"Master\">Master</option>\n                        <option value=\"Autre\">Autre</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Formation souhaitée<span className=\"text-blue\">*</span>\n                    </label>\n\n                    <select className={inputStyle} value={training} onChange={(e) => setTraining(e.target.value)}>\n                        <option value=\"\"></option>\n                        <option value=\"Développement web\">Développement web</option>\n                        <option value=\"Design Graphique\">Design Graphique</option>\n                        <option value=\"Marketing Digital\">Marketing Digital</option>\n                        <option value=\"Sécrétariat Bureautique\">Sécrétariat Bureautique</option>\n                        <option value=\"Développement Mobile\">Développement Mobile</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-row gap-4\">\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Date début <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"date\"\n                            className={inputStyle}\n                            value={dateBegin}\n                            onChange={(e) => setDateBegin(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Date fin <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"date\"\n                            className={inputStyle}\n                            value={dateEnd}\n                            onChange={(e) => setDateEnd(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Montant à payer <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-row gap-4\">\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Avance <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={advance}\n                            onChange={(e) => setAdvance(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Reste <span className=\"text-blue\">*</span>\n                        </label>\n                        <input type=\"text\" disabled className={inputStyle} value={rest} />\n                    </div>\n                </div>\n\n                <div className=\"flex flex-row justify-between \">\n                    <div>\n                        <button\n                            onClick={handleClickPrev}\n                            className=\"flex  rounded-md border-blue border text-blue px-7 py-1  justify-center items-center text-xl\"\n                        >\n                            <span className=\"material-icons\">chevron_left</span> Précédent\n                        </button>\n                    </div>\n\n                    <button\n                        onClick={addNewStudent}\n                        className=\"flex bg-blue rounded-md  text-white px-7 py-1  justify-center items-center text-xl\"\n                    >\n                        Terminé\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfosFormation\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DashboardStats.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DashboardCharts.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/LatestStudents.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/ListElement.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Boxformation.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/transactions.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/SideBarLinks.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Connexion.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/AuthContext.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/Loader.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/ModifInfosPerso.jsx",["244"],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutTransaction.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifTransaction.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutCompte.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutFormation.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifEleve.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifCompte.jsx",["245"],[],"import { Popover, Transition } from '@headlessui/react'\nimport { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { useState, useEffect } from 'react'\n\nfunction ModifCompte({ handleEdit, account }) {\n    return (\n        <Popover className=\"\">\n            {({ open }) => (\n                <>\n                    <div\n                        className={classNames(\n                            open && '!visible',\n                            ' invisible absolute top-0 left-0 bg-bdcolor backdrop-opacity-90 backdrop-blur-sm w-full h-full z-9 overflow-hidden'\n                        )}\n                    ></div>\n\n                    <Popover.Button\n                        className={classNames(open && '', 'hover:transform hover:scale-[1.1]  rounded-full ')}\n                    >\n                        <span className=\"material-icons text-green px-2 cursor-pointer\">edit</span>\n                    </Popover.Button>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-500\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                        <Popover.Panel className=\"absolute left-1/2 top-[10%] -translate-x-1/2 transform -translate-y-[0%] z-10 mt-3  max-w-sm  px-4 \">\n                            <Formulaire handleEdit={handleEdit} account={account} />\n                        </Popover.Panel>\n                    </Transition>\n                </>\n            )}\n        </Popover>\n    )\n}\n\nexport default ModifCompte\n\nfunction Formulaire({ handleEdit, account }) {\n    const inputStyle = 'h-8 bg-light-blue rounded-md  w-full outline-blue px-2 py-1 text-grey appearance-none'\n    const labelStyle = 'font-bold py-1 text-grey'\n    const [status, setStatus] = useState(account.status)\n    const [name, setName] = useState(account.name)\n    const [email, setEmail] = useState(account.email)\n    const [tel, setTel] = useState(account.tel)\n    const [password, setPassword] = useState(account.password)\n    const date = `${new Date().getDate()}/${new Date().getMonth() + 1}/${new Date().getFullYear()}`\n    const [newInfos, setNewInfos] = useState(account)\n\n    useEffect(() => {\n        setNewInfos({ ...newInfos, status, name, email, tel, password, date })\n    }, [status, name, email, tel, password, date])\n\n    return (\n        <div className=\" bg-white  shadow-md rounded-md w-[450px] py-1  \">\n            <div className=\"p-2 bg-white flex  flex-row justify-center border-light-blue border-b-2  items-center shadow-sm  \">\n                <span className=\"text-2xl font-bold text-[#0c0c75]\">Modifier les informations du compte</span>\n            </div>\n            <div className=\" flex flex-col gap-[10px] px-5 py-3\">\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Statut <span className=\"text-blue\">*</span>\n                    </label>\n                    <select\n                        name=\"\"\n                        id=\"\"\n                        value={status}\n                        onChange={(e) => setStatus(e.target.value)}\n                        className={inputStyle}\n                    >\n                        <option value=\"\" disabled selected></option>\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"Comptable\">Comptable</option>\n                        <option value=\"super-admin\">Super Admin</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Nom <span className=\"text-blue\">*</span>\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={name} onChange={(e) => setName(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        E-mail <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Tel <span className=\"text-blue\">*</span>\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={tel} onChange={(e) => setTel(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Mot de passe <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        disabled\n                    />\n                </div>\n                <div\n                    onClick={() => handleEdit(newInfos)}\n                    className=\"mt-2 flex justify-center py-2 rounded-md cursor-pointer text-md font-bold bg-blue hover:bg-[#181894] text-white\"\n                >\n                    Modifier\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifFormation.jsx",["246"],[],"import { Popover, Transition } from '@headlessui/react'\nimport { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { useState, useEffect } from 'react'\n\nfunction ModifFormation({ editTraining, training }) {\n    return (\n        <Popover className=\"\">\n            {({ open }) => (\n                <>\n                    <div\n                        className={classNames(\n                            open && '!visible',\n                            ' invisible absolute top-0 left-0 bg-bdcolor backdrop-opacity-90 backdrop-blur-sm w-full h-full z-9 overflow-hidden'\n                        )}\n                    ></div>\n\n                    <Popover.Button\n                        className={classNames(open && '', 'hover:transform hover:scale-[1.1] mt-1  rounded-full ')}\n                    >\n                        <span className=\"material-icons text-green px-2 cursor-pointer\">edit</span>\n                    </Popover.Button>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-500\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                        <Popover.Panel className=\"absolute left-1/2 top-[10%] -translate-x-1/2 transform -translate-y-[0%] z-10    px-4 \">\n                            <Formulaire editTraining={editTraining} training={training} />\n                        </Popover.Panel>\n                    </Transition>\n                </>\n            )}\n        </Popover>\n    )\n}\n\nexport default ModifFormation\n\nfunction Formulaire({ editTraining, training }) {\n    const inputStyle = 'h-8 bg-light-blue rounded-md  w-full outline-blue px-2 py-1 text-grey'\n    const labelStyle = 'font-bold py-1 text-grey'\n    const [name, setName] = useState(training.name)\n    const [duration, setDuration] = useState(training.duration)\n    const [mincost, setMincost] = useState(training.mincost)\n    const [maxcost, setMaxcost] = useState(training.maxcost)\n    const [trainer1, setTrainer1] = useState(training.trainer1)\n    const [trainer2, setTrainer2] = useState(training.trainer2)\n    const [newInfos, setnewInfos] = useState(training)\n\n    useEffect(() => {\n        setnewInfos({ ...newInfos, name, duration, mincost, maxcost, trainer1, trainer2 })\n    }, [name, duration, mincost, maxcost, trainer1, trainer2])\n\n    return (\n        <div className=\" bg-white  shadow-md rounded-md w-[450px] py-1  \">\n            <div className=\"p-2 bg-white flex  flex-row justify-center border-light-blue border-b-2  items-center shadow-sm  \">\n                <span className=\"text-2xl font-bold text-[#0c0c75]\">Modifier cette Formation</span>\n            </div>\n            <div className=\" flex flex-col gap-[10px] px-5 py-3\">\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Nom <span className=\"text-blue\">*</span>\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={name} onChange={(e) => setName(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Durée<span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={duration}\n                        onChange={(e) => setDuration(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Cout minimal <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={mincost}\n                        onChange={(e) => setMincost(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Cout maximal <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={maxcost}\n                        onChange={(e) => setMaxcost(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Formateur 1 <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={trainer1}\n                        onChange={(e) => setTrainer1(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Formateur 2\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={trainer2}\n                        onChange={(e) => setTrainer2(e.target.value)}\n                    />\n                </div>\n                <div\n                    onClick={() => editTraining(newInfos)}\n                    className=\"mt-2 flex justify-center py-2 rounded-md cursor-pointer text-md font-bold bg-blue hover:bg-[#181894] text-white\"\n                >\n                    Modifier\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/MailCompte.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/LinearStepper.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/AddSucess.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DeleteTraining.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteCompte.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteTransaction.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Infos.jsx",[],[],{"ruleId":"247","severity":1,"message":"248","line":17,"column":8,"nodeType":"249","endLine":17,"endColumn":19,"suggestions":"250"},{"ruleId":"247","severity":1,"message":"251","line":30,"column":8,"nodeType":"249","endLine":30,"endColumn":10,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":1,"column":16,"nodeType":"255","messageId":"256","endLine":1,"endColumn":27},{"ruleId":"253","severity":1,"message":"257","line":1,"column":8,"nodeType":"255","messageId":"256","endLine":1,"endColumn":23},{"ruleId":"247","severity":1,"message":"258","line":19,"column":8,"nodeType":"249","endLine":19,"endColumn":47,"suggestions":"259"},{"ruleId":"247","severity":1,"message":"258","line":14,"column":8,"nodeType":"249","endLine":14,"endColumn":35,"suggestions":"260"},{"ruleId":"247","severity":1,"message":"258","line":17,"column":8,"nodeType":"249","endLine":17,"endColumn":74,"suggestions":"261"},{"ruleId":"247","severity":1,"message":"258","line":19,"column":8,"nodeType":"249","endLine":19,"endColumn":47,"suggestions":"262"},{"ruleId":"247","severity":1,"message":"263","line":57,"column":8,"nodeType":"249","endLine":57,"endColumn":50,"suggestions":"264"},{"ruleId":"247","severity":1,"message":"265","line":57,"column":8,"nodeType":"249","endLine":57,"endColumn":62,"suggestions":"266"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["267"],"React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["268"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'default_profile' is defined but never used.","React Hook useEffect has missing dependencies: 'newStudent' and 'setNewStudent'. Either include them or remove the dependency array. If 'setNewStudent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["269"],["270"],["271"],["272"],"React Hook useEffect has a missing dependency: 'newInfos'. Either include it or remove the dependency array. You can also do a functional update 'setNewInfos(n => ...)' if you only need 'newInfos' in the 'setNewInfos' call.",["273"],"React Hook useEffect has a missing dependency: 'newInfos'. Either include it or remove the dependency array. You can also do a functional update 'setnewInfos(n => ...)' if you only need 'newInfos' in the 'setnewInfos' call.",["274"],{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"279","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [connected, navigate]",{"range":"290","text":"291"},"Update the dependencies array to be: [students]",{"range":"292","text":"293"},"Update the dependencies array to be: [firstName, lastName, sex, dateOfBirth, setNewStudent, newStudent]",{"range":"294","text":"295"},"Update the dependencies array to be: [tel1, tel2, email, quater, setNewStudent, newStudent]",{"range":"296","text":"297"},"Update the dependencies array to be: [schoolLevel, training, dateBegin, dateEnd, amount, advance, rest, setNewStudent, newStudent]",{"range":"298","text":"299"},{"range":"300","text":"295"},"Update the dependencies array to be: [status, name, email, tel, password, date, newInfos]",{"range":"301","text":"302"},"Update the dependencies array to be: [name, duration, mincost, maxcost, trainer1, trainer2, newInfos]",{"range":"303","text":"304"},[515,526],"[connected, navigate]",[963,965],"[students]",[664,703],"[firstName, lastName, sex, dateOfBirth, setNewStudent, newStudent]",[610,637],"[tel1, tel2, email, quater, setNewStudent, newStudent]",[838,904],"[schoolLevel, training, dateBegin, dateEnd, amount, advance, rest, setNewStudent, newStudent]",[602,641],[2546,2588],"[status, name, email, tel, password, date, newInfos]",[2546,2600],"[name, duration, mincost, maxcost, trainer1, trainer2, newInfos]"]