[{"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/index.js":"1","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/App.jsx":"2","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Layout.jsx":"3","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/NouvelEleve.jsx":"4","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Dashboard.jsx":"5","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/GestionEleves.jsx":"6","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/LogIn.jsx":"7","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Formations.jsx":"8","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Comptabilite.jsx":"9","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/SuperAdmin.jsx":"10","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Monprofil.jsx":"11","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/studentList.js":"12","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/trainings.js":"13","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/comptes.js":"14","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/SideBar.jsx":"15","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Footer.jsx":"16","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/UpperBar.jsx":"17","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosPerso.jsx":"18","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosContact.jsx":"19","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosFormation.jsx":"20","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DashboardStats.jsx":"21","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DashboardCharts.jsx":"22","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/LatestStudents.jsx":"23","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/ListElement.jsx":"24","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Boxformation.jsx":"25","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/transactions.jsx":"26","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/SideBarLinks.jsx":"27","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Connexion.jsx":"28","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/AuthContext.jsx":"29","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/Loader.jsx":"30","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/ModifInfosPerso.jsx":"31","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutTransaction.jsx":"32","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifTransaction.jsx":"33","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutCompte.jsx":"34","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutFormation.jsx":"35","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifEleve.jsx":"36","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifCompte.jsx":"37","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifFormation.jsx":"38","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/MailCompte.jsx":"39","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/LinearStepper.jsx":"40","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/AddSucess.jsx":"41","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DeleteTraining.jsx":"42","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteCompte.jsx":"43","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteTransaction.jsx":"44","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Infos.jsx":"45","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteStudent.jsx":"46","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/MailStudent.jsx":"47","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Loaders/StudentLoader.jsx":"48","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Loaders/Spinner.jsx":"49","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Loaders/LatestStudentLoader.jsx":"50"},{"size":258,"mtime":1695141243686,"results":"51","hashOfConfig":"52"},{"size":1664,"mtime":1696971804445,"results":"53","hashOfConfig":"52"},{"size":863,"mtime":1695984805930,"results":"54","hashOfConfig":"52"},{"size":1941,"mtime":1696908890077,"results":"55","hashOfConfig":"52"},{"size":401,"mtime":1694911767407,"results":"56","hashOfConfig":"52"},{"size":3792,"mtime":1712094973991,"results":"57","hashOfConfig":"52"},{"size":85,"mtime":1694687185622,"results":"58","hashOfConfig":"52"},{"size":5179,"mtime":1696912038867,"results":"59","hashOfConfig":"52"},{"size":5123,"mtime":1696918364640,"results":"60","hashOfConfig":"52"},{"size":4139,"mtime":1696918348500,"results":"61","hashOfConfig":"52"},{"size":3396,"mtime":1696372160288,"results":"62","hashOfConfig":"52"},{"size":12419,"mtime":1712092508554,"results":"63","hashOfConfig":"52"},{"size":1222,"mtime":1696703930818,"results":"64","hashOfConfig":"52"},{"size":1159,"mtime":1696704371135,"results":"65","hashOfConfig":"52"},{"size":1857,"mtime":1696357984511,"results":"66","hashOfConfig":"52"},{"size":534,"mtime":1695946646456,"results":"67","hashOfConfig":"52"},{"size":7419,"mtime":1695817288761,"results":"68","hashOfConfig":"52"},{"size":4267,"mtime":1696846603810,"results":"69","hashOfConfig":"52"},{"size":3488,"mtime":1696553792086,"results":"70","hashOfConfig":"52"},{"size":6889,"mtime":1712004268790,"results":"71","hashOfConfig":"52"},{"size":2595,"mtime":1694907112112,"results":"72","hashOfConfig":"52"},{"size":1853,"mtime":1694914233341,"results":"73","hashOfConfig":"52"},{"size":3158,"mtime":1712096461147,"results":"74","hashOfConfig":"52"},{"size":1882,"mtime":1712004142076,"results":"75","hashOfConfig":"52"},{"size":741,"mtime":1696373255230,"results":"76","hashOfConfig":"52"},{"size":1477,"mtime":1696375864701,"results":"77","hashOfConfig":"52"},{"size":881,"mtime":1696971615107,"results":"78","hashOfConfig":"52"},{"size":2821,"mtime":1695994133666,"results":"79","hashOfConfig":"52"},{"size":352,"mtime":1695994021692,"results":"80","hashOfConfig":"52"},{"size":164,"mtime":1696341798108,"results":"81","hashOfConfig":"52"},{"size":4210,"mtime":1696416155840,"results":"82","hashOfConfig":"52"},{"size":5284,"mtime":1696909111196,"results":"83","hashOfConfig":"52"},{"size":5066,"mtime":1696909123342,"results":"84","hashOfConfig":"52"},{"size":5879,"mtime":1696909008453,"results":"85","hashOfConfig":"52"},{"size":6039,"mtime":1696912252390,"results":"86","hashOfConfig":"52"},{"size":14603,"mtime":1712043197356,"results":"87","hashOfConfig":"52"},{"size":5813,"mtime":1696909084334,"results":"88","hashOfConfig":"52"},{"size":6037,"mtime":1696841662624,"results":"89","hashOfConfig":"52"},{"size":4078,"mtime":1699436918592,"results":"90","hashOfConfig":"52"},{"size":912,"mtime":1696846708480,"results":"91","hashOfConfig":"52"},{"size":467,"mtime":1696909937117,"results":"92","hashOfConfig":"52"},{"size":2805,"mtime":1696916726354,"results":"93","hashOfConfig":"52"},{"size":2877,"mtime":1696918644024,"results":"94","hashOfConfig":"52"},{"size":2957,"mtime":1696917534061,"results":"95","hashOfConfig":"52"},{"size":5861,"mtime":1696976618527,"results":"96","hashOfConfig":"52"},{"size":2843,"mtime":1711841474849,"results":"97","hashOfConfig":"52"},{"size":3875,"mtime":1712043843822,"results":"98","hashOfConfig":"52"},{"size":2476,"mtime":1711968979708,"results":"99","hashOfConfig":"52"},{"size":164,"mtime":1712005271810,"results":"100","hashOfConfig":"52"},{"size":1522,"mtime":1712096878541,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"j3iicj",{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"105"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"105"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"105"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"105"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"219"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/index.js",[],[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/App.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Layout.jsx",["265"],[],"import { Outlet } from 'react-router-dom'\nimport SideBar from './SideBar'\nimport UpperBar from './UpperBar'\nimport Footer from './Footer'\nimport { useContext } from 'react'\nimport { ConnectedUser } from '../utils/AuthContext'\nimport { useNavigate } from 'react-router-dom'\nimport { useEffect } from 'react'\nfunction Layout() {\n    const { connected } = useContext(ConnectedUser)\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if (!connected) {\n            navigate('/Connexion')\n        }\n    }, [connected])\n\n    return (\n        <div className=\"flex flex-row bg-slate h-screen w-screen overflow-hidden\">\n            <SideBar />\n            <div className=\"flex-1\">\n                <UpperBar />\n                <div className=\"p-4\">{<Outlet />}</div>\n                <Footer />\n            </div>\n        </div>\n    )\n}\n\nexport default Layout\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/NouvelEleve.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Dashboard.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/GestionEleves.jsx",["266"],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/LogIn.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Formations.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Comptabilite.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/SuperAdmin.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Monprofil.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/studentList.js",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/trainings.js",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/comptes.js",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/SideBar.jsx",["267"],[],"import { Link, useNavigate } from 'react-router-dom'\nimport logo from '../assets/digital-school-logo-transparent.png'\nimport { SIDE_BAR_TOP_LINKS, SIDE_BAR_BOTTOM_LINKS } from '../utils/SideBarLinks'\nimport classNames from 'classnames'\nimport { useLocation } from 'react-router-dom'\n\nconst LinkClasses =\n    'text-grey text-[18px] flex flex-row items-center gap-2 pl-5 py-3 hover:bg-light-blue  rounded-sm font-normal '\n\nconst ActiveLink = 'text-white bg-blue hover:!bg-blue '\n\nfunction SideBar() {\n    return (\n        <div className=\"bg-white  w-60 py-3 px-1 flex flex-col shadow-xl\">\n            <div className=\"flex items-center  mx-auto pb-4\">\n                <img src={logo} alt=\"logo\" className=\"object-contain  w-40\" />\n            </div>\n            <div className=\" flex flex-1 pb-0.5 flex-col gap-0.5\">\n                {SIDE_BAR_TOP_LINKS.map((item) => (\n                    <SideBarLink key={item.label} item={item} />\n                ))}\n            </div>\n            <div className=\" border-t pt-0.5  \">\n                {SIDE_BAR_BOTTOM_LINKS.map((item) => (\n                    <SideBarLink key={item.label} item={item} />\n                ))}\n                <div>\n                    <Link to=\"/Connexion\" className={classNames('text-red', LinkClasses)}>\n                        <span className=\"material-icons\">power_settings_new</span>\n                        Déconnexion\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SideBar\n\nfunction SideBarLink({ item }) {\n    const location = useLocation()\n    return (\n        <Link to={item.path} className={classNames(LinkClasses, location.pathname === item.path ? ActiveLink : '')}>\n            <span class className=\"material-icons\">\n                {item.icon}\n            </span>\n            {item.label}\n        </Link>\n    )\n}\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Footer.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/UpperBar.jsx",["268"],[],"import default_profile from '../assets/profile.png'\nimport { Popover, Transition } from '@headlessui/react'\nimport { Fragment } from 'react'\nimport classNames from 'classnames'\nimport React, { useState } from 'react'\n\nconst inputClass = 'w-70 py-1 px-2 text-grey focus:outline-none h-10'\n\nfunction UpperBar() {\n    const [month, setMonth] = useState(new Date().getMonth())\n    const [weekDay, setWeekDay] = useState(new Date().getDay())\n    const [day, setDay] = useState(new Date().getDate())\n    const [hour, setHour] = useState(new Date().getHours())\n    const [min, setMin] = useState(new Date().getMinutes())\n    const [sec, setSec] = useState(new Date().getSeconds())\n\n    const weekdays = ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam']\n    const months = ['jan', 'fev', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'sept', 'oct', 'nov', 'dec']\n\n    const refresh = () => {\n        setInterval(() => {\n            let d = new Date()\n            setMonth(d.getMonth() + 1)\n            setDay(d.getDate())\n            setWeekDay(d.getDay())\n            setHour(d.getHours())\n            setMin(d.getMinutes())\n            setSec(d.getSeconds())\n        }, 1000)\n    }\n    refresh()\n    return (\n        <div className=\" h-16 px-4 flex justify-between items-center  \">\n            <Popover className=\"\">\n                {({ open }) => (\n                    <>\n                        <div\n                            className={classNames(\n                                open && '!visible',\n                                ' invisible absolute top-0 left-0 bg-bdcolor backdrop-opacity-90 backdrop-blur-sm w-full h-full z-9 overflow-hidden'\n                            )}\n                        ></div>\n\n                        <Popover.Button\n                            className={classNames(\n                                open && 'bg-light-blue',\n                                'hover:bg-light-blue p-1 rounded-full focus:outline-none active:outline-none'\n                            )}\n                        >\n                            <div className=\"px-4 bg-white rounded-full flex items-center shadow-sm  \">\n                                <input type=\"text\" placeholder=\"chercher un élève...\" className={inputClass} />\n                                <span className=\"material-icons\">search</span>\n                            </div>\n                        </Popover.Button>\n                        <Transition\n                            as={Fragment}\n                            enter=\"transition ease-out duration-200\"\n                            enterFrom=\"opacity-0 translate-y-1\"\n                            enterTo=\"opacity-100 translate-y-0\"\n                            leave=\"transition ease-in duration-150\"\n                            leaveFrom=\"opacity-100 translate-y-0\"\n                            leaveTo=\"opacity-0 translate-y-1\"\n                        >\n                            <Popover.Panel className=\"absolute  left-1/2 z-10 mt-3 w-screen max-w-sm -translate-x-1/2 transform px-4 sm:px-0 lg:max-w-3xl\">\n                                <div className=\"bg-white  shadow-md rounded-md  py-1 h-60 max-h-2/3 \">\n                                    <div className=\"px-4 bg-white  border-light-blue border-b-2 flex items-center shadow-sm  \">\n                                        <span className=\"material-icons cursor-pointer\">search</span>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"chercher un élève...\"\n                                            className=\"focus:outline-none h-10 text-inputcolor py-2 mx-2 w-4/5\"\n                                        />\n                                    </div>\n                                    <div className=\"px-5 py-3\">Aucun résultat de recherche</div>\n                                </div>\n                            </Popover.Panel>\n                        </Transition>\n                    </>\n                )}\n            </Popover>\n\n            <div className=\"flex gap-10\">\n                <div className=\"flex items-center gap-1\">\n                    <div className=\"text-blue \">\n                        <span className=\"material-icons\">calendar_month</span>\n                    </div>\n                    <div className=\"flex gap-2\">\n                        <div>{`${weekdays[weekDay]}, ${day} ${months[month - 1]}`}.</div>\n                        <div className=\"flex flex-1\">\n                            {hour.toString().length === 1 ? '0' : ''}\n                            {hour}:{min.toString().length === 1 ? '0' : ''}\n                            {min}:{sec.toString().length === 1 ? '0' : ''}\n                            {sec}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Popover className=\"relative\">\n                        {({ open }) => (\n                            <>\n                                <Popover.Button\n                                    className={classNames(\n                                        open && 'bg-light-blue',\n                                        'hover:bg-light-blue p-1 z-1 rounded-full focus:outline-none active:outline-none'\n                                    )}\n                                >\n                                    <img\n                                        src=\"https://source.unsplash.com/40x40?african-man-face\"\n                                        alt=\"profile\"\n                                        className=\"w-10 object-cover rounded-full bg-light-blue\"\n                                    />\n                                </Popover.Button>\n                                <Transition\n                                    as={Fragment}\n                                    enter=\"transition ease-out duration-200\"\n                                    enterFrom=\"opacity-0 translate-y-1\"\n                                    enterTo=\"opacity-100 translate-y-0\"\n                                    leave=\"transition ease-in duration-150\"\n                                    leaveFrom=\"opacity-100 translate-y-0\"\n                                    leaveTo=\"opacity-0 translate-y-1\"\n                                >\n                                    <Popover.Panel className=\"absolute  right-2 z-10 mt-2.5  \">\n                                        <div className=\"bg-white w-60 rounded-lg shadow-lg p-3 \">\n                                            <strong>Profil</strong>\n                                            <br />\n                                            <span>Id:</span>\n                                            <br />\n                                            <span>Nom:</span>\n                                            <br />\n                                            <span>Statut:</span>\n                                            <br />\n                                            <span>Email: assaffart@gmail.com</span>\n                                            <br />\n                                        </div>\n                                    </Popover.Panel>\n                                </Transition>\n                            </>\n                        )}\n                    </Popover>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UpperBar\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosPerso.jsx",["269"],[],"import { Link } from 'react-router-dom'\nimport classNames from 'classnames'\nimport { useState, useEffect } from 'react'\n\nfunction InfosPerso({ activePage, setActivePage, inputStyle, labelStyle, newStudent, setNewStudent }) {\n    const [firstName, setFirstName] = useState(newStudent.firstName)\n    const [lastName, setLastName] = useState(newStudent.lastName)\n    const [sex, setSex] = useState(newStudent.sex)\n    const [dateOfBirth, setDateOfBirth] = useState(newStudent.dateOfBirth)\n\n    useEffect(() => {\n        setNewStudent({\n            ...newStudent,\n            firstName,\n            lastName,\n            sex,\n            dateOfBirth\n        })\n    }, [firstName, lastName, sex, dateOfBirth])\n\n    const handleClick = () => {\n        console.log(newStudent)\n        setActivePage(activePage + 1)\n    }\n\n    return (\n        <div>\n            <div className=\"w-full  text-center\">\n                <strong className=\"text-center text-blue text-2xl \">Informations personnelles</strong>\n            </div>\n            <div className=\"px-44 mt-3 flex flex-col gap-4\">\n                <div className=\"flex flex-row gap-4\">\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Nom <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={firstName}\n                            onChange={(e) => setFirstName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Prénom <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={lastName}\n                            onChange={(e) => setLastName(e.target.value)}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Sexe <span className=\"text-blue\">*</span>\n                    </label>\n                    <select type=\"text\" className={inputStyle} value={sex} onChange={(e) => setSex(e.target.value)}>\n                        <option value=\"\" defaultValue disabled></option>\n                        <option value=\"F\">Féminin</option>\n                        <option value=\"M\">Masculin</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Date de naissance<span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"date\"\n                        className={inputStyle}\n                        value={dateOfBirth}\n                        onChange={(e) => setDateOfBirth(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col flex-1 h-30\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Photo\n                    </label>\n                    <div className=\"bg-light-blue h-36 py-2 rounded-md\">\n                        <input type=\"file\" className={classNames(inputStyle, 'h-9')} />\n                    </div>\n                </div>\n\n                <div className=\"flex flex-row justify-between \">\n                    <div></div>\n                    <Link>\n                        <button\n                            onClick={handleClick}\n                            className=\"flex bg-blue rounded-md  text-white px-7 py-1  justify-center items-center text-xl\"\n                        >\n                            Suivant <span className=\"material-icons\">chevron_right</span>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfosPerso\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosContact.jsx",["270"],[],"import React, { useState, useEffect } from 'react'\n\nfunction InfosContact({ activePage, setActivePage, inputStyle, labelStyle, newStudent, setNewStudent }) {\n    const handleClickNext = () => setActivePage(activePage + 1)\n    const handleClickPrev = () => setActivePage(activePage - 1)\n\n    const [tel1, setTel1] = useState(newStudent.tel1)\n    const [tel2, setTel2] = useState(newStudent.tel2)\n    const [email, setEmail] = useState(newStudent.email)\n    const [quater, setQuater] = useState(newStudent.quater)\n\n    useEffect(() => {\n        setNewStudent({ ...newStudent, tel1, tel2, email, quater })\n    }, [tel1, tel2, email, quater])\n\n    return (\n        <div>\n            <div className=\"w-full  text-center\">\n                <strong className=\"text-center text-blue text-2xl \">Informations de contact</strong>\n            </div>\n            <div className=\"px-44 mt-5 flex flex-col gap-4\">\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Numéro de téléphone 1 <span className=\"text-blue\">*</span>\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={tel1} onChange={(e) => setTel1(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Numéro de téléphone 2\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={tel2} onChange={(e) => setTel2(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        E-mail <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"e-mail\"\n                        className={inputStyle}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Quartier <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={quater}\n                        onChange={(e) => setQuater(e.target.value)}\n                    />\n                </div>\n\n                <div className=\"flex flex-row justify-between \">\n                    <div>\n                        <button\n                            onClick={handleClickPrev}\n                            className=\"flex  rounded-md border-blue border text-blue px-7 py-1  justify-center items-center text-xl\"\n                        >\n                            <span className=\"material-icons\">chevron_left</span> Précédent\n                        </button>\n                    </div>\n\n                    <button\n                        onClick={handleClickNext}\n                        className=\"flex bg-blue rounded-md  text-white px-7 py-1  justify-center items-center text-xl\"\n                    >\n                        Suivant <span className=\"material-icons\">chevron_right</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfosContact\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/InfosFormation.jsx",["271"],[],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction InfosFormation({ activePage, setActivePage, inputStyle, labelStyle, newStudent, setNewStudent }) {\n    const handleClickPrev = () => setActivePage(activePage - 1)\n\n    const [schoolLevel, setSchoolLevel] = useState(newStudent.schoolLevel)\n    const [training, setTraining] = useState(newStudent.training)\n    const [dateBegin, setDateBegin] = useState(newStudent.dateBegin)\n    const [dateEnd, setDateEnd] = useState(newStudent.dateEnd)\n    const [amount, setAmount] = useState(newStudent.amount)\n    const [advance, setAdvance] = useState(newStudent.advance)\n    const [rest, setRest] = useState(newStudent.rest)\n\n    useEffect(() => {\n        setNewStudent({ ...newStudent, schoolLevel, training, dateBegin, dateEnd, amount, advance, rest })\n    }, [schoolLevel, training, dateBegin, dateEnd, amount, advance, rest])\n\n    useEffect(() => {\n        setRest(amount - advance)\n    }, [amount, advance])\n\n    function addNewStudent() {\n        setActivePage(activePage + 1)\n        axios\n            .post('http://localhost:8000/api/students', newStudent)\n            .then(() => console.log('Nouvel Eleve ajouté avec succès'))\n            .catch((error) => console.log(error))\n    }\n    return (\n        <div>\n            <div className=\"w-full  text-center\">\n                <strong className=\"text-center text-blue text-2xl \">Informations de la Formation</strong>\n            </div>\n            <div className=\"px-44 mt-5 flex flex-col gap-4\">\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Niveau scolaire<span className=\"text-blue\">*</span>\n                    </label>\n\n                    <select className={inputStyle} value={schoolLevel} onChange={(e) => setSchoolLevel(e.target.value)}>\n                        <option value=\"\"></option>\n                        <option value=\"CEP\">CEP</option>\n                        <option value=\"BEPC\">BEPC</option>\n                        <option value=\"Probatoire\">Probatoire</option>\n                        <option value=\"Bac\">Bac</option>\n                        <option value=\"Licence 1\">Licence 1</option>\n                        <option value=\"Licence 2\">Licence 2</option>\n                        <option value=\"Licence 3\">Licence 3</option>\n                        <option value=\"Master\">Master</option>\n                        <option value=\"Autre\">Autre</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Formation souhaitée<span className=\"text-blue\">*</span>\n                    </label>\n\n                    <select className={inputStyle} value={training} onChange={(e) => setTraining(e.target.value)}>\n                        <option value=\"\"></option>\n                        <option value=\"Développement web\">Développement web</option>\n                        <option value=\"Design Graphique\">Design Graphique</option>\n                        <option value=\"Marketing Digital\">Marketing Digital</option>\n                        <option value=\"Sécrétariat Bureautique\">Sécrétariat Bureautique</option>\n                        <option value=\"Développement Mobile\">Développement Mobile</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-row gap-4\">\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Date début <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"date\"\n                            className={inputStyle}\n                            value={dateBegin}\n                            onChange={(e) => setDateBegin(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Date fin <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"date\"\n                            className={inputStyle}\n                            value={dateEnd}\n                            onChange={(e) => setDateEnd(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"flex flex-col flex-1\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Montant à payer <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-row gap-4\">\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Avance <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={advance}\n                            onChange={(e) => setAdvance(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Reste <span className=\"text-blue\">*</span>\n                        </label>\n                        <input type=\"text\" disabled className={inputStyle} value={rest} />\n                    </div>\n                </div>\n\n                <div className=\"flex flex-row justify-between \">\n                    <div>\n                        <button\n                            onClick={handleClickPrev}\n                            className=\"flex  rounded-md border-blue border text-blue px-7 py-1  justify-center items-center text-xl\"\n                        >\n                            <span className=\"material-icons\">chevron_left</span> Précédent\n                        </button>\n                    </div>\n\n                    <button\n                        onClick={addNewStudent}\n                        className=\"flex bg-blue rounded-md  text-white px-7 py-1  justify-center items-center text-xl\"\n                    >\n                        Terminé\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfosFormation\n",[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DashboardStats.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DashboardCharts.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/LatestStudents.jsx",["272"],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/ListElement.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Boxformation.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/data/transactions.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/SideBarLinks.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Connexion.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/AuthContext.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/utils/Loader.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/ModifInfosPerso.jsx",["273"],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutTransaction.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifTransaction.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutCompte.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/AjoutFormation.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifEleve.jsx",["274","275"],[],"import * as React from 'react'\nimport Dialog from '@mui/material/Dialog'\n\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Spinner from '../components/Loaders/Spinner'\nimport classNames from 'classnames'\n\nexport default function ModifEleve({ handleDelete, student }) {\n    const [openBox, setOpenBox] = React.useState(false)\n\n    const handleClickOpen = () => {\n        setOpenBox(true)\n    }\n\n    const handleClose = () => {\n        setOpenBox(false)\n    }\n\n    return (\n        <div>\n            <span className=\"material-icons text-green px-2 cursor-pointer\" onClick={handleClickOpen}>\n                edit\n            </span>\n\n            <Dialog\n                open={openBox}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                maxWidth=\"xl\"\n            >\n                <Formulaire student={student} openBox={openBox} setOpenBox={setOpenBox} handleClose={handleClose} />\n            </Dialog>\n        </div>\n    )\n}\n\nfunction Formulaire({ student, openBox = { openBox }, setOpenBox = { setOpenBox }, handleClose }) {\n    const inputStyle = 'h-8 bg-light-blue rounded-md  w-full outline-blue px-2 py-1 text-grey'\n    const labelStyle = 'font-bold py-1 text-grey flex '\n    const [account, setAccount] = useState(student)\n\n    const [firstName, setFirstName] = useState(account.firstName)\n    const [lastName, setLastName] = useState(account.lastName)\n    const [sex, setSex] = useState(account.sex)\n    const [dateOfBirth, setDateOfBirth] = useState(account.dateOfBirth)\n    const [photo, setPhoto] = useState('')\n    const [email, setEmail] = useState(account.email)\n    const [tel1, setTel1] = useState(account.tel1)\n    const [tel2, setTel2] = useState(account.tel2)\n    const [quater, setQuater] = useState(account.quater)\n    const [dateBegin, setDateBegin] = useState(account.dateBegin)\n    const [dateEnd, setDateEnd] = useState(account.dateEnd)\n    const [amount, setAmount] = useState(account.amount)\n    const [advance, setAdvance] = useState(account.advance)\n    const [training, setTraining] = useState(account.training)\n    const [schoolLevel, setSchoolLevel] = useState(account.schoolLevel)\n    const rest = amount - advance\n\n    useEffect(() => {\n        setAccount({\n            firstName,\n            lastName,\n            sex,\n            dateOfBirth,\n            email,\n            tel1,\n            tel2,\n            quater,\n            dateEnd,\n            dateBegin,\n            amount,\n            advance,\n            training,\n            schoolLevel\n        })\n    }, [\n        firstName,\n        lastName,\n        sex,\n        dateOfBirth,\n        email,\n        tel1,\n        tel2,\n        quater,\n        dateEnd,\n        dateBegin,\n        amount,\n        advance,\n        training,\n        schoolLevel\n    ])\n\n    const [isUpdating, setIsUpdating] = useState(false)\n\n    const handleUpdate = () => {\n        setIsUpdating(true)\n        axios\n            .put(`http://localhost:8000/api/students/${student._id}`, account)\n            .then((res) => {\n                console.log(res)\n                setIsUpdating(false)\n                setOpenBox(false)\n            })\n            .catch((err) => console.log(err))\n    }\n    return (\n        <div className=\" bg-white flex flex-col shadow-md rounded-md  pt-2 pb-5  \">\n            <div className=\"p-4 bg-white flex  flex-row w-full justify-center border-light-blue border-b-2  items-center shadow-sm  \">\n                <span className=\"text-2xl font-bold text-[#0c0c75]\">Modifier les informations</span>\n            </div>\n            <div className=\"flex w-full px-4 gap-4\">\n                <section className=\"flex-1  flex-col gap-[10px]  py-3\">\n                    <div className=\"flex flex-col \">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Nom <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={firstName}\n                            onChange={(e) => setFirstName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col \">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Prénom <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={lastName}\n                            onChange={(e) => setLastName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Sexe <span className=\"text-blue\">*</span>\n                        </label>\n                        <select type=\"text\" className={inputStyle} value={sex} onChange={(e) => setSex(e.target.value)}>\n                            <option value=\"\" defaultValue disabled></option>\n                            <option value=\"F\">Féminin</option>\n                            <option value=\"M\">Masculin</option>\n                        </select>\n                    </div>\n\n                    <div className=\"flex flex-col \">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Date de Naissance <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"date\"\n                            className={inputStyle}\n                            value={dateOfBirth}\n                            onChange={(e) => setDateOfBirth(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"flex flex-col \">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Photo <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={photo}\n                            onChange={(e) => setPhoto(e.target.value)}\n                        />\n                    </div>\n                </section>\n                <section className=\"flex-1  flex-col gap-[2px]  py-3\">\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Numéro de téléphone 1 <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"number\"\n                            className={inputStyle}\n                            value={tel1}\n                            onChange={(e) => setTel1(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Numéro de téléphone 2\n                        </label>\n                        <input\n                            type=\"number\"\n                            className={inputStyle}\n                            value={tel2}\n                            onChange={(e) => setTel2(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            E-mail <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"e-mail\"\n                            className={inputStyle}\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Quartier <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={quater}\n                            onChange={(e) => setQuater(e.target.value)}\n                        />\n                    </div>\n                </section>\n                <section className=\"flex-1  flex-col gap-[10px]  py-3\">\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Niveau scolaire<span className=\"text-blue\">*</span>\n                        </label>\n\n                        <select\n                            className={inputStyle}\n                            value={schoolLevel}\n                            onChange={(e) => setSchoolLevel(e.target.value)}\n                        >\n                            <option value=\"\"></option>\n                            <option value=\"CEP\">CEP</option>\n                            <option value=\"BEPC\">BEPC</option>\n                            <option value=\"Probatoire\">Probatoire</option>\n                            <option value=\"Bac\">Bac</option>\n                            <option value=\"Licence 1\">Licence 1</option>\n                            <option value=\"Licence 2\">Licence 2</option>\n                            <option value=\"Licence 3\">Licence 3</option>\n                            <option value=\"Master\">Master</option>\n                            <option value=\"Autre\">Autre</option>\n                        </select>\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Formation <span className=\"text-blue\">*</span>\n                        </label>\n\n                        <select className={inputStyle} value={training} onChange={(e) => setTraining(e.target.value)}>\n                            <option value=\"\"></option>\n                            <option value=\"Développement web\">Développement web</option>\n                            <option value=\"Design Graphique\">Design Graphique</option>\n                            <option value=\"Marketing Digital\">Marketing Digital</option>\n                            <option value=\"Sécrétariat Bureautique\">Sécrétariat Bureautique</option>\n                            <option value=\"Développement Mobile\">Développement Mobile</option>\n                        </select>\n                    </div>\n                    <div className=\"flex flex-row gap-4\">\n                        <div className=\"flex flex-col flex-1\">\n                            <label htmlFor=\"\" className={labelStyle}>\n                                Date début <span className=\"text-blue\">*</span>\n                            </label>\n                            <input\n                                type=\"date\"\n                                className={inputStyle}\n                                value={dateBegin}\n                                onChange={(e) => setDateBegin(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"flex flex-col flex-1\">\n                            <label htmlFor=\"\" className={labelStyle}>\n                                Date fin <span className=\"text-blue\">*</span>\n                            </label>\n                            <input\n                                type=\"date\"\n                                className={inputStyle}\n                                value={dateEnd}\n                                onChange={(e) => setDateEnd(e.target.value)}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"flex flex-col flex-1\">\n                        <label htmlFor=\"\" className={labelStyle}>\n                            Montant à payer <span className=\"text-blue\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className={inputStyle}\n                            value={amount}\n                            onChange={(e) => setAmount(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex flex-row gap-4\">\n                        <div className=\"flex flex-col flex-1\">\n                            <label htmlFor=\"\" className={labelStyle}>\n                                Avance <span className=\"text-blue\">*</span>\n                            </label>\n                            <input\n                                type=\"text\"\n                                className={inputStyle}\n                                value={advance}\n                                onChange={(e) => setAdvance(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"flex flex-col flex-1\">\n                            <label htmlFor=\"\" className={labelStyle}>\n                                Reste <span className=\"text-blue\">*</span>\n                            </label>\n                            <input type=\"text\" disabled className={inputStyle} value={rest} />\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div className=\"mt-2 flex justify-center gap-5 px-5  \">\n                <button\n                    onClick={() => handleClose()}\n                    className=\"flex flex-1 justify-center py-2 rounded-md cursor-pointer text-md font-bold border-2 border-[#0c0c75] hover:bg-[#b7b7e9] text-[#0c0c75]\"\n                >\n                    Annuler\n                </button>{' '}\n                <button\n                    onClick={() => handleUpdate()}\n                    className={classNames(\n                        isUpdating && 'opacity-[0.8] ',\n                        'flex flex-1 justify-center py-2 rounded-md cursor-pointer text-md font-bold bg-[#0c0c75] hover:bg-[#181894] text-white'\n                    )}\n                >\n                    {isUpdating ? <Spinner /> : 'Valider'}\n                </button>\n            </div>\n        </div>\n    )\n}\n",[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifCompte.jsx",["276"],[],"import { Popover, Transition } from '@headlessui/react'\nimport { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { useState, useEffect } from 'react'\n\nfunction ModifCompte({ handleEdit, account }) {\n    return (\n        <Popover className=\"\">\n            {({ open }) => (\n                <>\n                    <div\n                        className={classNames(\n                            open && '!visible',\n                            ' invisible absolute top-0 left-0 bg-bdcolor backdrop-opacity-90 backdrop-blur-sm w-full h-full z-9 overflow-hidden'\n                        )}\n                    ></div>\n\n                    <Popover.Button\n                        className={classNames(open && '', 'hover:transform hover:scale-[1.1]  rounded-full ')}\n                    >\n                        <span className=\"material-icons text-green px-2 cursor-pointer\">edit</span>\n                    </Popover.Button>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-500\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                        <Popover.Panel className=\"absolute left-1/2 top-[10%] -translate-x-1/2 transform -translate-y-[0%] z-10 mt-3  max-w-sm  px-4 \">\n                            <Formulaire handleEdit={handleEdit} account={account} />\n                        </Popover.Panel>\n                    </Transition>\n                </>\n            )}\n        </Popover>\n    )\n}\n\nexport default ModifCompte\n\nfunction Formulaire({ handleEdit, account }) {\n    const inputStyle = 'h-8 bg-light-blue rounded-md  w-full outline-blue px-2 py-1 text-grey appearance-none'\n    const labelStyle = 'font-bold py-1 text-grey'\n    const [status, setStatus] = useState(account.status)\n    const [name, setName] = useState(account.name)\n    const [email, setEmail] = useState(account.email)\n    const [tel, setTel] = useState(account.tel)\n    const [password, setPassword] = useState(account.password)\n    const date = `${new Date().getDate()}/${new Date().getMonth() + 1}/${new Date().getFullYear()}`\n    const [newInfos, setNewInfos] = useState(account)\n\n    useEffect(() => {\n        setNewInfos({ ...newInfos, status, name, email, tel, password, date })\n    }, [status, name, email, tel, password, date])\n\n    return (\n        <div className=\" bg-white  shadow-md rounded-md w-[450px] py-1  \">\n            <div className=\"p-2 bg-white flex  flex-row justify-center border-light-blue border-b-2  items-center shadow-sm  \">\n                <span className=\"text-2xl font-bold text-[#0c0c75]\">Modifier les informations du compte</span>\n            </div>\n            <div className=\" flex flex-col gap-[10px] px-5 py-3\">\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Statut <span className=\"text-blue\">*</span>\n                    </label>\n                    <select\n                        name=\"\"\n                        id=\"\"\n                        value={status}\n                        onChange={(e) => setStatus(e.target.value)}\n                        className={inputStyle}\n                    >\n                        <option value=\"\" disabled selected></option>\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"Comptable\">Comptable</option>\n                        <option value=\"super-admin\">Super Admin</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Nom <span className=\"text-blue\">*</span>\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={name} onChange={(e) => setName(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        E-mail <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Tel <span className=\"text-blue\">*</span>\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={tel} onChange={(e) => setTel(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Mot de passe <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        disabled\n                    />\n                </div>\n                <div\n                    onClick={() => handleEdit(newInfos)}\n                    className=\"mt-2 flex justify-center py-2 rounded-md cursor-pointer text-md font-bold bg-blue hover:bg-[#181894] text-white\"\n                >\n                    Modifier\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/ModifFormation.jsx",["277"],[],"import { Popover, Transition } from '@headlessui/react'\nimport { Fragment } from 'react'\nimport classNames from 'classnames'\nimport { useState, useEffect } from 'react'\n\nfunction ModifFormation({ editTraining, training }) {\n    return (\n        <Popover className=\"\">\n            {({ open }) => (\n                <>\n                    <div\n                        className={classNames(\n                            open && '!visible',\n                            ' invisible absolute top-0 left-0 bg-bdcolor backdrop-opacity-90 backdrop-blur-sm w-full h-full z-9 overflow-hidden'\n                        )}\n                    ></div>\n\n                    <Popover.Button\n                        className={classNames(open && '', 'hover:transform hover:scale-[1.1] mt-1  rounded-full ')}\n                    >\n                        <span className=\"material-icons text-green px-2 cursor-pointer\">edit</span>\n                    </Popover.Button>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-500\"\n                        enterFrom=\"opacity-0 translate-y-1\"\n                        enterTo=\"opacity-100 translate-y-0\"\n                        leave=\"transition ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0\"\n                        leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                        <Popover.Panel className=\"absolute left-1/2 top-[10%] -translate-x-1/2 transform -translate-y-[0%] z-10    px-4 \">\n                            <Formulaire editTraining={editTraining} training={training} />\n                        </Popover.Panel>\n                    </Transition>\n                </>\n            )}\n        </Popover>\n    )\n}\n\nexport default ModifFormation\n\nfunction Formulaire({ editTraining, training }) {\n    const inputStyle = 'h-8 bg-light-blue rounded-md  w-full outline-blue px-2 py-1 text-grey'\n    const labelStyle = 'font-bold py-1 text-grey'\n    const [name, setName] = useState(training.name)\n    const [duration, setDuration] = useState(training.duration)\n    const [mincost, setMincost] = useState(training.mincost)\n    const [maxcost, setMaxcost] = useState(training.maxcost)\n    const [trainer1, setTrainer1] = useState(training.trainer1)\n    const [trainer2, setTrainer2] = useState(training.trainer2)\n    const [newInfos, setnewInfos] = useState(training)\n\n    useEffect(() => {\n        setnewInfos({ ...newInfos, name, duration, mincost, maxcost, trainer1, trainer2 })\n    }, [name, duration, mincost, maxcost, trainer1, trainer2])\n\n    return (\n        <div className=\" bg-white  shadow-md rounded-md w-[450px] py-1  \">\n            <div className=\"p-2 bg-white flex  flex-row justify-center border-light-blue border-b-2  items-center shadow-sm  \">\n                <span className=\"text-2xl font-bold text-[#0c0c75]\">Modifier cette Formation</span>\n            </div>\n            <div className=\" flex flex-col gap-[10px] px-5 py-3\">\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Nom <span className=\"text-blue\">*</span>\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={name} onChange={(e) => setName(e.target.value)} />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Durée<span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={duration}\n                        onChange={(e) => setDuration(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Cout minimal <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={mincost}\n                        onChange={(e) => setMincost(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Cout maximal <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={maxcost}\n                        onChange={(e) => setMaxcost(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Formateur 1 <span className=\"text-blue\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={trainer1}\n                        onChange={(e) => setTrainer1(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col\">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Formateur 2\n                    </label>\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={trainer2}\n                        onChange={(e) => setTrainer2(e.target.value)}\n                    />\n                </div>\n                <div\n                    onClick={() => editTraining(newInfos)}\n                    className=\"mt-2 flex justify-center py-2 rounded-md cursor-pointer text-md font-bold bg-blue hover:bg-[#181894] text-white\"\n                >\n                    Modifier\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/MailCompte.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/LinearStepper.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/AddSucess.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/DeleteTraining.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteCompte.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteTransaction.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/pages/Infos.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/Delete/DeleteStudent.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/popUps/MailStudent.jsx",["278","279"],[],"import * as React from 'react'\nimport Dialog from '@mui/material/Dialog'\nimport Spinner from '../components/Loaders/Spinner'\n\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport classNames from 'classnames'\n\nexport default function MailStudent({ handleDelete, student }) {\n    const [openBox, setOpenBox] = React.useState(false)\n\n    const handleClickOpen = () => {\n        setOpenBox(true)\n    }\n    const handleSendMail = () => {\n        setOpenBox(false)\n    }\n\n    const handleClose = () => {\n        setOpenBox(false)\n    }\n\n    return (\n        <div>\n            <span className=\"material-icons text-[#f59e0b] px-2 cursor-pointer\" onClick={() => handleClickOpen()}>\n                mail\n            </span>\n\n            <Dialog\n                open={openBox}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <Formulaire student={student} setOpenBox={setOpenBox} />\n            </Dialog>\n        </div>\n    )\n}\n\nfunction Formulaire({ student, setOpenBox }) {\n    const inputStyle = ' bg-light-blue rounded-md  w-full outline-blue px-2 py-[6px] text-grey'\n    const labelStyle = 'font-bold py-1 text-grey'\n\n    const [subject, setSubject] = useState('')\n    const [text, setText] = useState('')\n    const email = student.email\n    const [isSending, setIsSending] = useState(false)\n\n    const handleSendMail = () => {\n        setIsSending(true)\n        axios\n            .post(`http://localhost:8000/api/students/${student._id}`, { subject, text })\n            .then(() => {\n                console.log('message envoyé!')\n                setIsSending(false)\n                setOpenBox(false)\n            })\n            .catch((err) => console.log(err))\n        // setOpenBox(false)\n    }\n\n    return (\n        <div className=\" bg-white  shadow-md rounded-md w-[450px] py-[6px]  \">\n            <div className=\"p-2 bg-white flex  flex-row justify-center border-light-blue border-b-2  items-center shadow-sm  \">\n                <span className=\"text-2xl font-bold text-[#0c0c75]\">Envoyer un mail </span>\n            </div>\n            <div className=\" flex flex-col gap-[10px] px-5 py-3\">\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        {'  '}À\n                    </label>\n                    <input type=\"text\" className={inputStyle} value={email} disabled />\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Objet<span className=\"text-blue\">*</span>\n                    </label>\n\n                    <input\n                        type=\"text\"\n                        className={inputStyle}\n                        value={subject}\n                        onChange={(e) => setSubject(e.target.value)}\n                    />\n                </div>\n                <div className=\"flex flex-col \">\n                    <label htmlFor=\"\" className={labelStyle}>\n                        Corps<span className=\"text-blue\">*</span>\n                    </label>\n                    <textarea rows={4} className={inputStyle} value={text} onChange={(e) => setText(e.target.value)} />\n                </div>\n\n                <div\n                    onClick={() => {\n                        handleSendMail()\n                    }}\n                    className={classNames(\n                        isSending && 'opacity-[0.8] ',\n                        'mt-2 flex justify-center py-2 rounded-md cursor-pointer text-md font-bold bg-blue hover:bg-[#181894] text-white'\n                    )}\n                >\n                    {isSending ? <Spinner /> : 'Envoyer'}\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Loaders/StudentLoader.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Loaders/Spinner.jsx",[],[],"/home/beral/Bureau/programmes/projets/digital-school-dashboard/frontend/src/components/Loaders/LatestStudentLoader.jsx",[],[],{"ruleId":"280","severity":1,"message":"281","line":17,"column":8,"nodeType":"282","endLine":17,"endColumn":19,"suggestions":"283"},{"ruleId":"280","severity":1,"message":"284","line":31,"column":8,"nodeType":"282","endLine":31,"endColumn":10,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":27},{"ruleId":"286","severity":1,"message":"290","line":1,"column":8,"nodeType":"288","messageId":"289","endLine":1,"endColumn":23},{"ruleId":"280","severity":1,"message":"291","line":19,"column":8,"nodeType":"282","endLine":19,"endColumn":47,"suggestions":"292"},{"ruleId":"280","severity":1,"message":"291","line":14,"column":8,"nodeType":"282","endLine":14,"endColumn":35,"suggestions":"293"},{"ruleId":"280","severity":1,"message":"291","line":17,"column":8,"nodeType":"282","endLine":17,"endColumn":74,"suggestions":"294"},{"ruleId":"280","severity":1,"message":"284","line":17,"column":8,"nodeType":"282","endLine":17,"endColumn":10,"suggestions":"295"},{"ruleId":"280","severity":1,"message":"291","line":19,"column":8,"nodeType":"282","endLine":19,"endColumn":47,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":39,"column":44,"nodeType":"288","messageId":"299","endLine":39,"endColumn":51},{"ruleId":"297","severity":1,"message":"300","line":39,"column":70,"nodeType":"288","messageId":"299","endLine":39,"endColumn":80},{"ruleId":"280","severity":1,"message":"301","line":57,"column":8,"nodeType":"282","endLine":57,"endColumn":50,"suggestions":"302"},{"ruleId":"280","severity":1,"message":"303","line":57,"column":8,"nodeType":"282","endLine":57,"endColumn":62,"suggestions":"304"},{"ruleId":"286","severity":1,"message":"305","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":19},{"ruleId":"286","severity":1,"message":"306","line":15,"column":11,"nodeType":"288","messageId":"289","endLine":15,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["307"],"React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["308"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'default_profile' is defined but never used.","React Hook useEffect has missing dependencies: 'newStudent' and 'setNewStudent'. Either include them or remove the dependency array. If 'setNewStudent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["309"],["310"],["311"],["312"],["313"],"no-use-before-define","'openBox' was used before it was defined.","usedBeforeDefined","'setOpenBox' was used before it was defined.","React Hook useEffect has a missing dependency: 'newInfos'. Either include it or remove the dependency array. You can also do a functional update 'setNewInfos(n => ...)' if you only need 'newInfos' in the 'setNewInfos' call.",["314"],"React Hook useEffect has a missing dependency: 'newInfos'. Either include it or remove the dependency array. You can also do a functional update 'setnewInfos(n => ...)' if you only need 'newInfos' in the 'setnewInfos' call.",["315"],"'useEffect' is defined but never used.","'handleSendMail' is assigned a value but never used.",{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"318","fix":"326"},{"desc":"320","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"Update the dependencies array to be: [connected, navigate]",{"range":"332","text":"333"},"Update the dependencies array to be: [students]",{"range":"334","text":"335"},"Update the dependencies array to be: [firstName, lastName, sex, dateOfBirth, setNewStudent, newStudent]",{"range":"336","text":"337"},"Update the dependencies array to be: [tel1, tel2, email, quater, setNewStudent, newStudent]",{"range":"338","text":"339"},"Update the dependencies array to be: [schoolLevel, training, dateBegin, dateEnd, amount, advance, rest, setNewStudent, newStudent]",{"range":"340","text":"341"},{"range":"342","text":"335"},{"range":"343","text":"337"},"Update the dependencies array to be: [status, name, email, tel, password, date, newInfos]",{"range":"344","text":"345"},"Update the dependencies array to be: [name, duration, mincost, maxcost, trainer1, trainer2, newInfos]",{"range":"346","text":"347"},[515,526],"[connected, navigate]",[942,944],"[students]",[664,703],"[firstName, lastName, sex, dateOfBirth, setNewStudent, newStudent]",[610,637],"[tel1, tel2, email, quater, setNewStudent, newStudent]",[838,904],"[schoolLevel, training, dateBegin, dateEnd, amount, advance, rest, setNewStudent, newStudent]",[535,537],[602,641],[2546,2588],"[status, name, email, tel, password, date, newInfos]",[2546,2600],"[name, duration, mincost, maxcost, trainer1, trainer2, newInfos]"]